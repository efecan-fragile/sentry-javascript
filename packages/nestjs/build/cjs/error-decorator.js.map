{"version":3,"file":"error-decorator.js","sources":["../../src/error-decorator.ts"],"sourcesContent":["import { captureException } from '@sentry/core';\nimport { isExpectedError } from './helpers';\n\n/**\n * A decorator to wrap user-defined exception filters and add Sentry error reporting.\n */\nexport function WithSentry() {\n  return function (target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const originalCatch = descriptor.value as (exception: unknown, host: unknown, ...args: any[]) => void;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    descriptor.value = function (exception: unknown, host: unknown, ...args: any[]) {\n      if (isExpectedError(exception)) {\n        return originalCatch.apply(this, args);\n      }\n\n      captureException(exception);\n      return originalCatch.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n"],"names":["isExpectedError","captureException"],"mappings":";;;;;AAGA;AACA;AACA;AACO,SAAS,UAAU,GAAG;AAC7B,EAAE,OAAO,UAAU,MAAM,EAAW,WAAW,EAAU,UAAU,EAAsB;AACzF;AACA,IAAI,MAAM,aAAA,GAAgB,UAAU,CAAC,KAAM,EAAA;AAC3C;AACA;AACA,IAAI,UAAU,CAAC,KAAM,GAAE,UAAU,SAAS,EAAW,IAAI,EAAW,GAAG,IAAI,EAAS;AACpF,MAAM,IAAIA,uBAAe,CAAC,SAAS,CAAC,EAAE;AACtC,QAAQ,OAAO,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AAC9C,OAAM;AACN;AACA,MAAMC,qBAAgB,CAAC,SAAS,CAAC,CAAA;AACjC,MAAM,OAAO,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AAC5C,KAAK,CAAA;AACL;AACA,IAAI,OAAO,UAAU,CAAA;AACrB,GAAG,CAAA;AACH;;;;"}